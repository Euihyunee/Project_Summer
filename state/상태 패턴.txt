상태 패턴(state pattern)(=행위 패턴 유형)
- 객체의 내부 상태에 따라 행동을 변경할 수 있음

1. 객체 자신의 내부 상태에 따라 행위를 변경하도록 하는 패턴

2. 사용 : 객체의 행동이 상태에 따라 달라질 수 있고, 객체의 상태에 따라 런타임에 행동이 바뀌어야할 경우 

3. 객체의 상태에 따라 달라지는 다중 분기 조건 처리가 너무 많이 들어있을 때, 객체의 상태를 표현하기 위해 나열형상수(Enum)로 정의해야한다. 

4. 효과
- 상태에 따른 행동을 국소화하며 서로 다른 상태에 대한 행동을 별도의 객체로 관리
- 상태 패턴 사용 시 상태 관련된 모든 행동을 하나의 객체 안에 놓을 수 있다. 
- 메소드로 정의하였기 때문에 새로운 상태나 규칙을 추가할려면 정의된 메소드를 오버라이드해 추가하면 됨  
- 새로운 상태가 추가되더라도 Context 코드가 받는 영향이 적다. 
- 상태 전이를 명확하게 만듬
※ 상태 전이 : 입력에 따라 다음 상태로 바뀌는 것을 뜻함 
- 상태에 따른 동적을 구현한 코드를 수정하기 쉽다. 

5. 상태 패턴 vs 전략 패턴
- 상태 패턴 : 코드 내 조건문을 대체할 수 있다. 
- 상태 객체 내부에서 다음 상태를 결정한다. 
- 전략 패턴 : 상속을 대체할 수 있다.  
- 클라이언트(외부)에서 다음에 실행할 객체를 지정 가능 
